// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Small_Stock_Project;

#nullable disable

namespace Small_Stock_Project.Migrations
{
    [DbContext(typeof(StockContext))]
    partial class StockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Small_Stock_Project.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Powder for oral solution in sachet",
                            Name = "Daflon"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Powder for solution for infusion",
                            Name = "Oxazepam"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Solution for peritoneal dialysis..",
                            Name = "Euthyrox"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Solution for injection/infusion.",
                            Name = "Rybelsus"
                        },
                        new
                        {
                            Id = 5,
                            Description = "	Film-coated tablet	.",
                            Name = "Clonex"
                        },
                        new
                        {
                            Id = 6,
                            Description = "PHENOXYMETHYLPENICILLIN.",
                            Name = "OSPEN 500"
                        },
                        new
                        {
                            Id = 7,
                            Description = "CHLORAMPHENICOL,BENZOCAINE.",
                            Name = "OTOCOL EAR DROPS"
                        },
                        new
                        {
                            Id = 8,
                            Description = "PARACETAMOL,PSEUDOEPHEDRINE.",
                            Name = "PANADOL COLD & FLU CAPLET"
                        },
                        new
                        {
                            Id = 9,
                            Description = "OVITRELLE 250MCG-0.5ML PRE-FILLED SYRING.",
                            Name = "PANADOL ADVANCE 500MG"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Vaginal gel",
                            Name = "PROSTIN E2 1MG VAGINAL GEL IN APPLICATOR"
                        });
                });

            modelBuilder.Entity("Small_Stock_Project.Store", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("stores");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "Wardian st.",
                            name = "Wardian"
                        },
                        new
                        {
                            id = 2,
                            address = "Zezienya st.",
                            name = "Zezienya"
                        },
                        new
                        {
                            id = 3,
                            address = "Syouif Taram st.",
                            name = "Syouif"
                        },
                        new
                        {
                            id = 4,
                            address = "Luran st.",
                            name = "Luran"
                        },
                        new
                        {
                            id = 5,
                            address = "Shots st.",
                            name = "Shots"
                        },
                        new
                        {
                            id = 6,
                            address = "NasrCity st.",
                            name = "NasrCity"
                        },
                        new
                        {
                            id = 7,
                            address = "Maddy st.",
                            name = "Maady"
                        },
                        new
                        {
                            id = 8,
                            address = "Shbora st.",
                            name = "Shobra"
                        },
                        new
                        {
                            id = 9,
                            address = "KafrAbdo st.",
                            name = "KafrAbdo"
                        },
                        new
                        {
                            id = 10,
                            address = "Vectoria st.",
                            name = "Vectoria"
                        });
                });

            modelBuilder.Entity("Small_Stock_Project.StoreItem", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.HasKey("StoreId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("storeItems");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            ItemId = 1,
                            Balance = 10
                        },
                        new
                        {
                            StoreId = 2,
                            ItemId = 2,
                            Balance = 8
                        },
                        new
                        {
                            StoreId = 3,
                            ItemId = 3,
                            Balance = 11
                        },
                        new
                        {
                            StoreId = 4,
                            ItemId = 4,
                            Balance = 7
                        },
                        new
                        {
                            StoreId = 5,
                            ItemId = 5,
                            Balance = 3
                        },
                        new
                        {
                            StoreId = 1,
                            ItemId = 2,
                            Balance = 4
                        },
                        new
                        {
                            StoreId = 2,
                            ItemId = 3,
                            Balance = 2
                        },
                        new
                        {
                            StoreId = 1,
                            ItemId = 5,
                            Balance = 10
                        },
                        new
                        {
                            StoreId = 5,
                            ItemId = 3,
                            Balance = 9
                        },
                        new
                        {
                            StoreId = 4,
                            ItemId = 1,
                            Balance = 8
                        },
                        new
                        {
                            StoreId = 2,
                            ItemId = 5,
                            Balance = 18
                        },
                        new
                        {
                            StoreId = 3,
                            ItemId = 4,
                            Balance = 17
                        },
                        new
                        {
                            StoreId = 4,
                            ItemId = 2,
                            Balance = 15
                        },
                        new
                        {
                            StoreId = 5,
                            ItemId = 1,
                            Balance = 14
                        },
                        new
                        {
                            StoreId = 6,
                            ItemId = 6,
                            Balance = 9
                        },
                        new
                        {
                            StoreId = 7,
                            ItemId = 7,
                            Balance = 16
                        },
                        new
                        {
                            StoreId = 8,
                            ItemId = 8,
                            Balance = 17
                        },
                        new
                        {
                            StoreId = 9,
                            ItemId = 9,
                            Balance = 22
                        },
                        new
                        {
                            StoreId = 10,
                            ItemId = 10,
                            Balance = 20
                        },
                        new
                        {
                            StoreId = 6,
                            ItemId = 10,
                            Balance = 25
                        },
                        new
                        {
                            StoreId = 7,
                            ItemId = 9,
                            Balance = 3
                        },
                        new
                        {
                            StoreId = 8,
                            ItemId = 6,
                            Balance = 5
                        },
                        new
                        {
                            StoreId = 10,
                            ItemId = 7,
                            Balance = 6
                        },
                        new
                        {
                            StoreId = 6,
                            ItemId = 8,
                            Balance = 8
                        },
                        new
                        {
                            StoreId = 9,
                            ItemId = 8,
                            Balance = 4
                        },
                        new
                        {
                            StoreId = 10,
                            ItemId = 2,
                            Balance = 7
                        },
                        new
                        {
                            StoreId = 9,
                            ItemId = 3,
                            Balance = 6
                        },
                        new
                        {
                            StoreId = 8,
                            ItemId = 4,
                            Balance = 4
                        },
                        new
                        {
                            StoreId = 7,
                            ItemId = 3,
                            Balance = 3
                        },
                        new
                        {
                            StoreId = 6,
                            ItemId = 5,
                            Balance = 12
                        });
                });

            modelBuilder.Entity("Small_Stock_Project.StoreItem", b =>
                {
                    b.HasOne("Small_Stock_Project.Item", "Item")
                        .WithMany("storeItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Small_Stock_Project.Store", "Store")
                        .WithMany("storeItems")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Small_Stock_Project.Item", b =>
                {
                    b.Navigation("storeItems");
                });

            modelBuilder.Entity("Small_Stock_Project.Store", b =>
                {
                    b.Navigation("storeItems");
                });
#pragma warning restore 612, 618
        }
    }
}
